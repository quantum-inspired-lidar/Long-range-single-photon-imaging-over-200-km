% Shin TCI Processing
% Reflectivity estimation assuming detection counts are binomial with a
% subtracted background rate. 
% ROM censoring to attempt to remove noise detections. 
% Depth estimation from regularized log-matched filter.

%% Read and preprocess the data

totDetect = data_processed;

numTotDetect = cellfun('length',totDetect);
[Lr,Lc] = size(numTotDetect);
parfor iii = 1:Lr
    for jjj = 1:Lc
        totDetect{iii,jjj} = sort(totDetect{iii,jjj}-mm)';
    end
end

meanSigDetect = signal_per_pixel;
SBR = sbr;
numFrames = pulse_num;

NrB = meanSigDetect/SBR;                    
bgndRate = NrB/numFrames;

%% Fixed Lidar system parameters

c_v = 3e8;
bin_size = 1e-12; 
pulse_bins = (1e-9) / bin_size;
pulse = normpdf(1:8*pulse_bins,(8*pulse_bins-1)/2,pulse_bins/2);


%% Fixed Algorithm Parameters

% tv
beta_alpha = 0.1;
beta_z = 0.1;

% Alpha Regularization
max_iter_alpha = 40;
pen_type = 'tv'; 
AT = @(x) x; A = @(x) x;

% ROM Censoring
romSize = 2;

% Z Regularization
max_iter_z = 20; 
ainit_z = 0.05; 

%% Reconstruction

% Step 1: Reflectivity
reflData = numTotDetect;

C_tv = SPIRALTAP(reflData,A,beta_alpha, ...
        'noisetype','poisson', ... 
        'penalty','tv', ...
        'maxiter',max_iter_alpha,... 
        'AT',AT,...
        'monotone',1,...
        'stopcriterion',3,...
        'tolerance',1e-12,...
        'saveobjective',1,...
        'savereconerror',0,...
        'savecputime',1,...
        'savesolutionpath',0,...
        'alphainit',0.2,...
        'alphaaccept',1e80,...
        'verbose',0);    
    
bestShinAlpha = max(log(numFrames./(numFrames-C_tv))-bgndRate,0);

% Step 2: ROM Censoring
romOutput = fcn_ROM_filter(totDetect, romSize);
[~, T_ML_Shin, ~ ] = fcn_ROM_Censor(totDetect, bestShinAlpha, pulse_bins, bgndRate, pulse, romOutput);

% Step 3: Depth
T_Data = T_ML_Shin;
T_Init = T_ML_Shin;

T_tv_Shin = SPIRALTAP(T_Data,A,beta_z, ...
        'noisetype','gaussian', ...
        'penalty',pen_type, ...
        'maxiter',max_iter_z,...
        'Initialization',T_Data,... 
        'monotone',1,...
        'miniter',1,...
        'AT',AT,...
        'stopcriterion',4,...
        'tolerance',1e-6,...
        'alphainit',ainit_z,...
        'alphaaccept',1e80,...
        'logepsilon',1e-10,...
        'saveobjective',1,...
        'savereconerror',1,...
        'savecputime',1,...
        'savesolutionpath',0,...
        'truth',T_Init,...
        'reconerrortype',0,...
        'verbose',0);

bestShinZ = (T_tv_Shin)*c_v/2*bin_size;

Shin_Alpha = bestShinAlpha;
Shin_Z = bestShinZ;
